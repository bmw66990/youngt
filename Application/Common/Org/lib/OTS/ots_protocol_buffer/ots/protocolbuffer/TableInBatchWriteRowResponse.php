<?php
namespace ots\protocolbuffer;

// @@protoc_insertion_point(namespace:.ots.protocolbuffer.TableInBatchWriteRowResponse)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: ots_protocol_buffer.proto
 *
 * -*- magic methods -*-
 *
 * @method string getTableName()
 * @method void setTableName(\string $value)
 * @method array getPutRows()
 * @method void appendPutRows(\ots\protocolbuffer\RowInBatchWriteRowResponse $value)
 * @method array getUpdateRows()
 * @method void appendUpdateRows(\ots\protocolbuffer\RowInBatchWriteRowResponse $value)
 * @method array getDeleteRows()
 * @method void appendDeleteRows(\ots\protocolbuffer\RowInBatchWriteRowResponse $value)
 */
class TableInBatchWriteRowResponse extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.ots.protocolbuffer.TableInBatchWriteRowResponse)
  
  /**
   * @var string $table_name
   * @tag 1
   * @label required
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $table_name;
  
  /**
   * @var array $put_rows
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \ots\protocolbuffer\RowInBatchWriteRowResponse
   *
   * same indices w.r.t. request
   *
   **/
  protected $put_rows;
  
  /**
   * @var array $update_rows
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \ots\protocolbuffer\RowInBatchWriteRowResponse
   *
   * same indices w.r.t. request
   *
   **/
  protected $update_rows;
  
  /**
   * @var array $delete_rows
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   * @see \ots\protocolbuffer\RowInBatchWriteRowResponse
   *
   * same indices w.r.t. request
   *
   **/
  protected $delete_rows;
  
  
  // @@protoc_insertion_point(properties_scope:.ots.protocolbuffer.TableInBatchWriteRowResponse)

  // @@protoc_insertion_point(class_scope:.ots.protocolbuffer.TableInBatchWriteRowResponse)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "table_name",
        "required" => true,
        "optional" => false,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "put_rows",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\ots\protocolbuffer\RowInBatchWriteRowResponse',
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "update_rows",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\ots\protocolbuffer\RowInBatchWriteRowResponse',
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "delete_rows",
        "required" => false,
        "optional" => false,
        "repeated" => true,
        "packable" => false,
        "default"  => null,
        "message" => '\ots\protocolbuffer\RowInBatchWriteRowResponse',
      )));
      // @@protoc_insertion_point(builder_scope:.ots.protocolbuffer.TableInBatchWriteRowResponse)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
